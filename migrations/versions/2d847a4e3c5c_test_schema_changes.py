"""Test schema changes

Revision ID: 2d847a4e3c5c
Revises: 
Create Date: 2025-03-25 15:32:06.257759

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2d847a4e3c5c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('patients')
    op.drop_table('role_module_access')
    op.drop_table('_test_schema_table')
    op.drop_table('user_sessions')
    op.drop_table('_test_backup_table')
    op.drop_table('user_role_mapping')
    op.drop_table('users')
    op.drop_table('parameter_settings')
    op.drop_table('login_history')
    op.drop_table('role_master')
    op.drop_table('branches')
    op.drop_table('staff')
    op.drop_table('module_master')
    op.drop_table('hospitals')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hospitals',
    sa.Column('hospital_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('license_no', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('address', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('contact_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('encryption_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('encryption_key', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('encryption_config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('hospital_id', name='hospitals_pkey'),
    sa.UniqueConstraint('license_no', name='hospitals_license_no_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('module_master',
    sa.Column('module_id', sa.INTEGER(), server_default=sa.text("nextval('module_master_module_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('module_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('parent_module', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sequence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('icon', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('route', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_module'], ['module_master.module_id'], name='module_master_parent_module_fkey'),
    sa.PrimaryKeyConstraint('module_id', name='module_master_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('staff',
    sa.Column('staff_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('hospital_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('branch_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('employee_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('specialization', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('personal_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('contact_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('professional_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('employment_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('documents', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.branch_id'], name='staff_branch_id_fkey'),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.hospital_id'], name='staff_hospital_id_fkey'),
    sa.PrimaryKeyConstraint('staff_id', name='staff_pkey'),
    sa.UniqueConstraint('employee_code', name='staff_employee_code_key')
    )
    op.create_table('branches',
    sa.Column('branch_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('hospital_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('address', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('contact_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.hospital_id'], name='branches_hospital_id_fkey'),
    sa.PrimaryKeyConstraint('branch_id', name='branches_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('role_master',
    sa.Column('role_id', sa.INTEGER(), server_default=sa.text("nextval('role_master_role_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('hospital_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('role_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('is_system_role', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.hospital_id'], name='role_master_hospital_id_fkey'),
    sa.PrimaryKeyConstraint('role_id', name='role_master_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('login_history',
    sa.Column('history_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('login_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('logout_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('failure_reason', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='login_history_user_id_fkey'),
    sa.PrimaryKeyConstraint('history_id', name='login_history_pkey')
    )
    op.create_table('parameter_settings',
    sa.Column('param_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('param_value', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('data_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('module', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_editable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('param_code', name='parameter_settings_pkey')
    )
    op.create_table('users',
    sa.Column('user_id', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('hospital_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('entity_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('failed_login_attempts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.hospital_id'], name='users_hospital_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_role_mapping',
    sa.Column('user_id', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role_master.role_id'], name='user_role_mapping_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='user_role_mapping_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name='user_role_mapping_pkey')
    )
    op.create_table('_test_backup_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_column', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='_test_backup_table_pkey')
    )
    op.create_table('user_sessions',
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='user_sessions_user_id_fkey'),
    sa.PrimaryKeyConstraint('session_id', name='user_sessions_pkey')
    )
    op.create_table('_test_schema_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='_test_schema_table_pkey')
    )
    op.create_table('role_module_access',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('can_view', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('can_add', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('can_edit', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('can_delete', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('can_export', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['module_master.module_id'], name='role_module_access_module_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['role_master.role_id'], name='role_module_access_role_id_fkey'),
    sa.PrimaryKeyConstraint('role_id', 'module_id', name='role_module_access_pkey')
    )
    op.create_table('patients',
    sa.Column('patient_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('hospital_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('branch_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('mrn', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('blood_group', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('personal_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('contact_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('medical_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emergency_contact', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('documents', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.branch_id'], name='patients_branch_id_fkey'),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.hospital_id'], name='patients_hospital_id_fkey'),
    sa.PrimaryKeyConstraint('patient_id', name='patients_pkey'),
    sa.UniqueConstraint('mrn', name='patients_mrn_key')
    )
    # ### end Alembic commands ###
